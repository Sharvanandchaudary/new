name: Node.js CI/CD Workflow

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  GLOBAL_ENV_VAR: "This is a global variable"

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache Node.js Modules
        id: Cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: Install Dependencies
        if: steps.Cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build the Application
        run: npm run build

  lint:
    name: Run Linting and Generate Lint Report
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Run Linting
        run: npm run lint

      - name: Upload Lint Report
        uses: actions/upload-artifact@v3
        with:
          name: lint-report
          path: lint-results.xml

  test:
    name: Run Tests and Generate Test Report
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Run Tests
        run: npm test -- --reporters=default --reporters=jest-junit

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: junit.xml

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: production
      url: http://example.com
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Deploy Application
        env:
          API_KEY: ${{ secrets.API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          PORT: ${{ secrets.PORT }}
        run: |
          echo "Deploying application to production..."
          npm run start
          echo "API Key: $API_KEY"
          echo "Database URL: $DATABASE_URL"
          echo "Port: $PORT"
